apply plugin: 'com.android.application'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def ndkDir = properties.getProperty('ndk.dir')
def valLayerBinDir = "${ndkDir}/sources/third_party/vulkan/src/build-android/jniLibs"

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.spencerfricke.accelerometer_cube"
        minSdkVersion 24
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        // Shader compilation directives, put glsl shaders to app/src/main/shaders
        // android studio will pick them up and compile them into APK/assets/shaders
        // KNOWN ISSUE:  if shaders having errors, it takes long time for gradle to timeout
        //               but it will eventually time out and complain about shader compiling
        shaders {
            glslcArgs.addAll(['-c', '-g'])
        }
        externalNativeBuild {
            cmake {
                // armeabi is not supported, not building for mips in samples
                abiFilters 'armeabi-v7a', 'arm64-v8a'
                arguments '-DANDROID_TOOLCHAIN=clang', '-DANDROID_STL=gnustl_static'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs {
                // Must have ndk-r12 or better which including layer binaries
                srcDirs = ["${valLayerBinDir}"]
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
